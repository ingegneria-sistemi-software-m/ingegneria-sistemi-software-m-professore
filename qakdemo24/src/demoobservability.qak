System qakdemo24 

Dispatch info : info(SOURCE,TERM)
 
Context ctxobs ip [host="localhost" port=8004]

QActor observer context ctxobs {
  State s0 initial{
  	delay 1000 //Give time for worker to start
/*1*/observeResource worker msgid info
  }
  Transition t0 whenMsg info -> handleinfo

  State handleinfo{
    printCurrentMessage
    println("$currentMsg") color blue
/*2*/[#
     CommUtils.outblue( currentMsg.toString() )
     CommUtils.outblue( "$currentMsg" )
     CommUtils.outblue( currentMsg.msgContent().toString() )
     CommUtils.outblue( "${currentMsg.msgContent()}" )
    #]
    onMsg( info:info(SOURCE,TERM)){
      [# val Source = payloadArg(0)
        val infoMsg = payloadArg(1)
        val M      = "$infoMsg from $Source"
      #]
      println("$M") color magenta
      //[# CommUtils.outmagenta( M ) #]
    }
  }
  Transition t0 whenMsg info -> handleinfo
}

QActor worker context ctxobs{
  State s0 initial{
    [# var n = 0 #]
/*1*/delay 1500
/*2*/updateResource [# "hello_${n++}" #]
    delay 2000
/*3*/updateResource [# "info(worker, hello_${n++})" #]

    delay 1000
    [# System.exit(0) #]
  }
}